
CMAKE_MINIMUM_REQUIRED(VERSION 2.6 FATAL_ERROR)

SET(PACKAGE ${PROJECT_NAME})
SET(VERSION "1.0.0")

SET(PACKAGE_NAME ${PACKAGE})
SET(PACKAGE_VERSION ${VERSION})
SET(PACKAGE_STRING "${PACKAGE_NAME} ${PACKAGE_VERSION}")

MESSAGE(STATUS "Added Project: " ${PACKAGE_STRING})

INCLUDE_DIRECTORIES("../EntitySystems/include" ${PATH_GLEW_INCLUDE} ${PATH_GLFW_INCLUDE} ${PATH_OGLPLUS_INCLUDE})
LINK_DIRECTORIES(${LIBRARY_DIRECTORY})

INCLUDE_DIRECTORIES("include")
INCLUDE_DIRECTORIES("src")

FILE(GLOB TEST_GAME_SRC "src/*.cpp")

MESSAGE(STATUS "Source Files: ")
FOREACH(SRC_FILE ${TEST_GAME_SRC})
    MESSAGE(STATUS ${SRC_FILE})
ENDFOREACH(SRC_FILE ${TEST_GAME_SRC})

ADD_EXECUTABLE(${PROJECT_NAME} ${TEST_GAME_SRC})
TARGET_LINK_LIBRARIES(${PROJECT_NAME} debug EntitySystems_sd optimized EntitySystems_s)

IF(WIN32)
    SET(PATH_HELPER_DEBUG "${PATH_GLEW_LIB}/Debug/Win32")
    SET(PATH_HELPER_RELEASE "${PATH_GLEW_LIB}/Release/Win32")
    IF (NOT EXISTS "${PATH_HELPER_DEBUG}" AND NOT EXISTS "${PATH_HELPER_RELEASE}")
        #TARGET_LINK_LIBRARIES(${PROJECT_NAME} debug "${PATH_GLEW_LIB}/Debug/glew32sd.lib" optimized "${PATH_GLEW_LIB}/Release/glew32s.lib")
        TARGET_LINK_LIBRARIES(${PROJECT_NAME} debug "${PATH_GLEW_LIB}/Debug/glew32d.lib" optimized "${PATH_GLEW_LIB}/Release/glew32.lib")
    ELSE()
        #TARGET_LINK_LIBRARIES(${PROJECT_NAME} debug "${PATH_HELPER_DEBUG}/glew32sd.lib" optimized "${PATH_HELPER_RELEASE}/glew32s.lib")
        TARGET_LINK_LIBRARIES(${PROJECT_NAME} debug "${PATH_HELPER_DEBUG}/glew32d.lib" optimized "${PATH_HELPER_RELEASE}/glew32.lib")
    ENDIF()
    TARGET_LINK_LIBRARIES(${PROJECT_NAME} debug "${PATH_GLFW_LIB}/Debug/glfw3.lib" optimized "${PATH_GLFW_LIB}/Release/glfw3.lib")
    TARGET_LINK_LIBRARIES(${PROJECT_NAME} opengl32)
ELSEIF(UNIX)

ENDIF()

SET_TARGET_PROPERTIES(${PROJECT_NAME} PROPERTIES DEBUG_POSTFIX "_d")

SET_PROPERTY(TARGET ${PROJECT_NAME} PROPERTY CXX_STANDARD 11)

SET_PROPERTY(TARGET ${PROJECT_NAME} PROPERTY CXX_STANDARD_REQUIRED ON)